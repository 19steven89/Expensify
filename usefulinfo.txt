added: sudo npm i -g live-server to view the app from the live server

added babel: sudo npm i -g babel-cli@6.24.1

added command: yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

command takes the code in src/app.js and converts it into the
putput file in scripts/app.js: babel app.js --outfile=public/scripts/app.js --presets=env,react

used sudo npm uninstall -g babel-cli live-server
to remove both these npm modukes globally. It's best to have the npms installed for each project,
so that they are included in the dependencies json file which can give details of the npms used
to run the project rather than global modules.

used: npm add live-server babel-cli@6.24.1
to install these npm modules locally which are now included in dependencies of the package.json file

added scripts to the app. Cam now use npm run serve to run live-server public from the app.
also added the script "build" to run compile the react app file into the app.js in the scripts folder
 
 added npm webpack-dev-server with this it can replace the live-server npm as well as the babel build
 this also takes away the need for bundle.js file as the app will generate this file automaticaly when compiling
 without saving it to the directory

 added npm: babel-plugin-transform-class-properties
 and the code: 
   "plugins": [
        "transform-class-properties"
    ]
    to the babelrc file. this npm is for using class properties, with new ES6 syntax

    added npm node-sass for converting scss into regular css and npm sass-loader for loading css files 
    also configured the webpack.config file to support the scss files

added: npm install --save-dev @babel/preset-react for using object spread(e.g: ...object) operator and added the plugin to 
the babelrc file.

